{"pageProps":{"lastModified":"Sun, 26 Jun 2022 12:13:32 GMT","data":"# Weekly #12\n\n[《Rams》 -工业设计传奇设计师 迪特.拉姆斯 2018 纪录片（附中文字幕）](https://www.bilibili.com/video/BV1Jt411i781)\n\n> “Rams’ is the new documentary by filmmaker Gary Hustwit (Helvetica) about legendary designer Dieter Rams. For over fifty years, Rams has left an indelible mark on the field of product design with his iconic work at Braun and Vitsoe, and his influence\n\n---\n\n[A Polkadot Postmortem - 24.05.2021](https://polkadot.network/a-polkadot-postmortem-24-05-2021/)\n\n最近 Rust 的 binary_search 性能改进导致区块链项目 Polkadot 出了 bug。\n\n这个性能改进是一个中国人提交的 PR，他在 [Twitter](https://twitter.com/_hisriver/status/1398264047229829129) 上表示这次 PR 用一周时间跑了 5 万多个开源 Rust 项目的测试，都没发现什么问题，没想到这个价值几十亿美金的项目中招了。\n\n---\n\n[Introducing WebContainers: Run Node.js natively in your browser](https://blog.stackblitz.com/posts/introducing-webcontainers/)\n\nStackBlitz 公布了一项名为 WebContainers 的技术（但没有开源），可以在浏览器中跑 Node.js 运行前端工具链进行本地开发。\n\n- 用 WebAssembly 运行 Node.js 的某些原生依赖\n- 使用虚拟的文件系统，不用在本地创建 node_modules 文件夹，将来可能会用上 Chrome 的 [File System Access API](https://web.dev/file-system-access/)\n- 把 TCP 协议栈映射到 ServiceWorker 上，从而解决了浏览器无法发送原生 TCP 请求的问题。\n\n有网友做出了简单的[开源实现](https://github.com/yisar/labor)\n\n---\n\n[Krustlet: Kubernetes Kubelet in Rust for running WASM](https://github.com/deislabs/krustlet)\n\n一个试验性项目，让 WebAssembly 作为 Container 跑在 K8S 上。\n\n---\n\n[Aseprite - Animated sprite editor & pixel art tool](https://www.aseprite.org/)\n\n一个像素动画编辑器，点击下方图片即可观看演示视频。\n\n[![Aseprite v1.3 Trailer](https://i3.ytimg.com/vi/4emFL4aV9WM/mqdefault.jpg)](https://www.youtube.com/watch?v=4emFL4aV9WM \"Aseprite v1.3 Trailer\")\n\n---\n\n[LCH colors in CSS: what, why, and how?](https://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how/)\n\nLCH 是一种新的色彩表示方法，相比于常用的 RGB/HSL 有一些独有的优势。\n\n---\n\n[ASCII Play](https://play.ertdfgcvb.xyz/)\n\n在浏览器中编写可交互的字符动画，内含多个炫酷 demo。还能够调用 Camera API，把摄像头拍到的转换为字符画面。\n\nhttps://user-images.githubusercontent.com/8287771/120078209-e1e4af00-c0e0-11eb-95a9-ac6ed68ec71c.mp4\n\n---\n\n[v86](https://github.com/copy/v86)\n\n使用 WebAssembly 模拟 x86 兼容 CPU 以及一些周边硬件设备。\n","pathname":"weekly/12"},"__N_SSG":true}