{"pageProps":{"lastModified":"Sun, 26 Jun 2022 12:13:32 GMT","data":"# Weekly #1\n\n## 见闻\n\n公司换了电信套餐，每年便宜很多钱，唯一的要求是要更换一个静态 IP。我和同事不解为什么会有天上掉馅饼的事情，来推销的人说到：因为你们可以换 IP（而不影响公司正常业务），理论上你们也可以换到移动联通等更便宜的套餐上，对于电信来说你们不是粘性用户，与其完全失去用户，不如我们主动降价来防止你换到移动联通。\n\n---\n\n原来 FreeBSD 的虚拟化技术名字叫[jail](https://zh.wikipedia.org/wiki/FreeBSD_jail)，前一阵使用 TrueNAS 系统看到这个命名感到十分费解。这里可以看到两种技术的比较：[Linux LXC vs FreeBSD jail](https://unix.stackexchange.com/questions/127001/linux-lxc-vs-freebsd-jail?answertab=votes#tab-top)\n\n---\n\n[Rasmus Andersson](https://twitter.com/rsms)，Spotify/Dropbox/Facebook/Figma 的（前）设计师。\n这里有一篇关于他的[采访](https://staff.design/rasmus-andersson)，主要讲的是他在管理岗和设计岗之间是如何选择的。\n\n---\n\n同事[@sorcererxw](https://github.com/sorcererxw)最近将一个服务从 Node.JS 迁移到 Golang，并整理成一篇文章：[Golang 在即刻后端的实践](https://mp.weixin.qq.com/s/cepoYJR5Xeloan31-D1iQg)。文中介绍了测试、持续集成、监控、错误收集等方面的实践。\n\n---\n\n[glTF](https://www.khronos.org/gltf/)是一种免费、可扩展的 3D 模型文件格式，具有广泛的支持。一句话解释：\n\n> glTF is the \"JPEG of 3D\"\n\n---\n\n[Past, Present, and Future of React State Management](https://leerob.io/blog/react-state-management)\n\n对于 React 状态管理的一个总结，文末有表格让你根据项目复杂度和团队规模快速选择自己需要的那款 React 状态管理库。\n\n我的使用轨迹是：Redux -> SWR -> Jotai\n\n---\n\n[Chakra UI is the Only React Component Library You Need](https://javascript.plainenglish.io/chakra-the-react-component-library-you-need-7e383a105a90)\n\n同事[@0neSe7en](https://github.com/0neSe7en)：\n\n> 感觉 chakra-ui 最近发展非常快。用的 emotion + style-system 和 framer-motion。有点像是 React.js 的 Tailwind。解决了很多响应式和 accessbility 的问题。和之前的 rebass 之类的很像\n\n之前用过不少 React UI 框架，都是很好看和好用的，如[Blueprint](https://blueprintjs.com/)、[Fluent UI](https://developer.microsoft.com/en-us/fluentui#/)、[Material UI](https://material-ui.com/zh/)。今天同事推荐了[Chakra UI](https://chakra-ui.com/)，看起来很好看，找机会试用一下。\n\n---\n\n[Navigator.sendBeacon()](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon)\n\n使用这个 API，浏览器可以在页面关闭之前发出一个异步请求，但只能是 POST 请求，最初设计用来发送一些统计数据，但也可以干一些别的事情，比如保存文档等等。\n\n---\n\n之前就听说[Mighty](https://mightyapp.com/)浏览器，号称比 Chrome 快，省十倍内存。今天在它的[招人页面](https://www.notion.so/Mighty-is-hiring-945d3168d3e34a37883ca4d823ed734f)上看到竟然是在云端服务器上面跑 Chrome，然后把画面传回客户端，类似最近很火的“云游戏：\n\n> **How does this product technically work?**\n>\n> We take Google Chrome, host it on Linux, and stream frames at extremely low-latency to a user’s local desktop on macOS. It’s similar to how remote desktop works except it’s so fast you won’t notice a difference between it and how your local desktop feels with reasonable bandwidth.\n\n个人感觉技能树点歪了，在现今的网络环境下体验肯定普通 Chrome，与其花钱买 Mighty 的服务，不如花钱给电脑加点内存。\n\n---\n\n即友[@少楠 Melow](https://web.okjike.com/u/7B1385A9-FCC9-4446-B8CE-472EAF6817B2)分享了一篇演讲稿[Design, Composition and Performance](https://github.com/matthiasn/talk-transcripts/blob/master/Hickey_Rich/DesignCompositionPerformance.md)\n\n> 不行就加个配置？\n>\n> 让所有的选项都开放，这不是在设计；\n> 让一切都是可配置的，这也不是设计。\n>\n> 设计就是默认值的拿捏和取舍\n> 设计就是做决定\n>\n> 好的设计是什么？\n>\n> - 把东西分开，独立的存在；而不是制定一个复杂的系统（ eg. 我的世界）\n> - 每一个组件可只关于一个或一小部分事情\n> - 重新组合起来，解决一个问题\n>\n> 这篇演讲太优秀了\n\n---\n\n前同事[@Joway](https://github.com/joway)分享了[技术写作：原理与实践(2020)](https://techcomm-book.readthedocs.io/zh_CN/latest/index.html)\n\n作者是[高志军](https://gaozhijun.me/about/)，北京大学/软件与微电子学院/数字艺术与技术传播系讲师，这个文档用于他的《技术文档写作》课程的教学。\n\n## 折腾\n\n用了一下[CouchDB](https://couchdb.apache.org/)，这是一个用 Erlang 写的数据库。\n\n- 自带 HTTP/JSON 接口\n- 同步机制做的很到位，可以很方便地在浏览器和服务器之间进行全量同步和事件监听\n- 自带一个名为 Fauxton 的 Web 管理页\n\n不清楚性能怎么样，周末写了个小[DEMO](http://111.231.89.212:3000/)用起来还蛮爽的。\n\n---\n\n写了一个网页上的[Markdown 双栏编辑器](https://mars3.vercel.app/)（去年年底就开始写了，最近终于可以正常使用了）\n\n- 遵循[GitHub Flavored Markdown Spec](https://github.github.com/gfm/)\n- 可以通过配置，选择将文档存储在不同的地方，目前只支持 S3 compatible API 和浏览器本地缓存，之后打算支持 Gist\n- 编辑后自动同步，不用按保存按钮。\n- 使用了 Monaco Editor 和 Web Worker，编辑体验非常丝滑\n- 纯前端，不收集任何数据\n- 可以拖拽上传本地文件\n- 对于图片的支持还很初步\n\n本周报就是用这个编辑器撰写的，目前整体体验和 VSCode 双栏编辑 Markdown 差不多，之后会逐步做一些东西超越它。\n\nS3 的存储服务需要自己提供，推荐使用[七牛](https://s.qiniu.com/Mryqm2)，免费的 10GB 存储，使用 S3 compatible API 还能免去绑定域名的麻烦。\n","pathname":"weekly/1"},"__N_SSG":true}